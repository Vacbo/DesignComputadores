tmp(0) := x"4" & '0' & x"01"; -- LDI $1      
tmp(1) := x"5" & '0' & x"01"; -- STA @1      
tmp(2) := x"4" & '0' & x"00"; -- LDI $0      
tmp(3) := x"5" & '0' & x"00"; -- STA @0      
tmp(4) := x"5" & '1' & x"00"; -- STA @256      #zera led 70
tmp(5) := x"5" & '0' & x"0E"; -- STA @14      
tmp(6) := x"5" & '0' & x"0F"; -- STA @15      
tmp(7) := x"5" & '0' & x"10"; -- STA @16      
tmp(8) := x"5" & '0' & x"08"; -- STA @8      # zera limite unidades
tmp(9) := x"5" & '0' & x"09"; -- STA @9      # zera limite dezenas
tmp(10) := x"5" & '0' & x"0A"; -- STA @10      # zera limite centenas
tmp(11) := x"5" & '0' & x"0B"; -- STA @11      # zera limite milhares
tmp(12) := x"5" & '0' & x"0C"; -- STA @12      # zera limite dezenas de milhares
tmp(13) := x"5" & '0' & x"0D"; -- STA @13      # zera limite centenas de milhares
tmp(14) := x"4" & '0' & x"00"; -- LDI $0      
tmp(15) := x"5" & '0' & x"02"; -- STA @2      #zera count unidades
tmp(16) := x"5" & '0' & x"03"; -- STA @3      #zera count dezenas
tmp(17) := x"5" & '0' & x"04"; -- STA @4      #zera count centenas
tmp(18) := x"5" & '0' & x"05"; -- STA @5      #zera count milhares
tmp(19) := x"5" & '0' & x"06"; -- STA @6      #zera count dezenas de milhares
tmp(20) := x"5" & '0' & x"07"; -- STA @7      #zera count centenas de milhares
tmp(21) := x"5" & '1' & x"20"; -- STA @288      
tmp(22) := x"5" & '1' & x"21"; -- STA @289      
tmp(23) := x"5" & '1' & x"22"; -- STA @290      
tmp(24) := x"5" & '1' & x"23"; -- STA @291      
tmp(25) := x"5" & '1' & x"24"; -- STA @292      
tmp(26) := x"5" & '1' & x"25"; -- STA @293      
tmp(27) := x"9" & '0' & x"E2"; -- JSR @226      #chama subrotina verifica_limite
tmp(28) := x"9" & '1' & x"3D"; -- JSR @317      #chama subrotina verifica_zero
tmp(29) := x"9" & '1' & x"4E"; -- JSR @334      #chama subrotina verifica_ovf
tmp(30) := x"1" & '1' & x"60"; -- LDA @352      #le key 0
tmp(31) := x"B" & '0' & x"01"; -- AND @1      #macara para key 0
tmp(32) := x"8" & '0' & x"01"; -- CEQ @1      
tmp(33) := x"C" & '0' & x"23"; -- JNE @35      #pula para key1
tmp(34) := x"9" & '0' & x"39"; -- JSR @57      #chama subrotina incrementa
tmp(35) := x"1" & '1' & x"61"; -- LDA @353      #le key 1
tmp(36) := x"B" & '0' & x"01"; -- AND @1      #macara para key 1
tmp(37) := x"8" & '0' & x"01"; -- CEQ @1      
tmp(38) := x"C" & '0' & x"29"; -- JNE @41      #pula para key2
tmp(39) := x"9" & '0' & x"7D"; -- JSR @125      #chama subrotina configura_limite
tmp(40) := x"6" & '0' & x"0E"; -- JMP @14      
tmp(41) := x"1" & '1' & x"62"; -- LDA @354      #le key 2
tmp(42) := x"B" & '0' & x"01"; -- AND @1      #macara para key 2
tmp(43) := x"8" & '0' & x"01"; -- CEQ @1      
tmp(44) := x"C" & '0' & x"2E"; -- JNE @46      #pula para key3
tmp(45) := x"9" & '0' & x"FC"; -- JSR @252      #chama subrotina decrementa
tmp(46) := x"1" & '1' & x"63"; -- LDA @355      #le key 3
tmp(47) := x"B" & '0' & x"01"; -- AND @1      #macara para key 3
tmp(48) := x"8" & '0' & x"01"; -- CEQ @1      
tmp(49) := x"C" & '0' & x"33"; -- JNE @51      #pula para keyrst
tmp(50) := x"9" & '1' & x"62"; -- JSR @354      #chama subrotina configura_count
tmp(51) := x"1" & '1' & x"64"; -- LDA @356      #le key rst
tmp(52) := x"B" & '0' & x"01"; -- AND @1      #mascara para key rst
tmp(53) := x"8" & '0' & x"01"; -- CEQ @1      #compara com 1
tmp(54) := x"C" & '0' & x"1B"; -- JNE @27      #se key rst for 1, pula para loop
tmp(55) := x"5" & '1' & x"FB"; -- STA @507      #limpa key rst
tmp(56) := x"6" & '0' & x"0E"; -- JMP @14      #chama subrotina zera_count
tmp(57) := x"5" & '1' & x"FF"; -- STA @511      #limpa key
tmp(58) := x"1" & '0' & x"0E"; -- LDA @14      #le flag de limite
tmp(59) := x"8" & '0' & x"01"; -- CEQ @1      #compara com 1
tmp(60) := x"7" & '0' & x"7C"; -- JEQ @124      #se flag de limite for 1, pula para :retinc
tmp(61) := x"1" & '0' & x"0F"; -- LDA @15      #le flag de overflow
tmp(62) := x"8" & '0' & x"01"; -- CEQ @1      
tmp(63) := x"7" & '0' & x"7C"; -- JEQ @124      #se flag de overflow for 1, pula para :retinc
tmp(64) := x"1" & '0' & x"02"; -- LDA @2      #le count unidades
tmp(65) := x"2" & '0' & x"01"; -- SOMA @1      #soma 1
tmp(66) := x"5" & '0' & x"02"; -- STA @2      #salva count unidades
tmp(67) := x"5" & '1' & x"20"; -- STA @288      #mostra count unidades
tmp(68) := x"4" & '0' & x"0A"; -- LDI $10      
tmp(69) := x"8" & '0' & x"02"; -- CEQ @2      #compara unidade com 10
tmp(70) := x"7" & '0' & x"48"; -- JEQ @72      #se for 10, pula para :rstu
tmp(71) := x"A" & '0' & x"00"; -- RET       #retorna
tmp(72) := x"4" & '0' & x"00"; -- LDI $0      
tmp(73) := x"5" & '0' & x"02"; -- STA @2      #zera count unidades
tmp(74) := x"5" & '1' & x"20"; -- STA @288      #zera count unidades
tmp(75) := x"1" & '0' & x"03"; -- LDA @3      #le count dezenas
tmp(76) := x"2" & '0' & x"01"; -- SOMA @1      #soma 1
tmp(77) := x"5" & '0' & x"03"; -- STA @3      #salva count dezenas
tmp(78) := x"5" & '1' & x"21"; -- STA @289      #mostra count dezenas
tmp(79) := x"4" & '0' & x"0A"; -- LDI $10      
tmp(80) := x"8" & '0' & x"03"; -- CEQ @3      #compara dezena com 10
tmp(81) := x"7" & '0' & x"53"; -- JEQ @83      #se for 10, pula para :rstd
tmp(82) := x"A" & '0' & x"00"; -- RET       #retorna
tmp(83) := x"4" & '0' & x"00"; -- LDI $0      
tmp(84) := x"5" & '0' & x"03"; -- STA @3      #zera count dezenas
tmp(85) := x"5" & '1' & x"21"; -- STA @289      #zera count dezenas
tmp(86) := x"1" & '0' & x"04"; -- LDA @4      #le count centenas
tmp(87) := x"2" & '0' & x"01"; -- SOMA @1      #soma 1
tmp(88) := x"5" & '0' & x"04"; -- STA @4      #salva count centenas
tmp(89) := x"5" & '1' & x"22"; -- STA @290      #mostra count centenas
tmp(90) := x"4" & '0' & x"0A"; -- LDI $10      
tmp(91) := x"8" & '0' & x"04"; -- CEQ @4      #compara centena com 10
tmp(92) := x"7" & '0' & x"5E"; -- JEQ @94      #se for 10, pula para :rstc
tmp(93) := x"A" & '0' & x"00"; -- RET       #retorna
tmp(94) := x"4" & '0' & x"00"; -- LDI $0      
tmp(95) := x"5" & '0' & x"04"; -- STA @4      #zera count centenas
tmp(96) := x"5" & '1' & x"22"; -- STA @290      #zera count centenas
tmp(97) := x"1" & '0' & x"05"; -- LDA @5      #le count milhares
tmp(98) := x"2" & '0' & x"01"; -- SOMA @1      #soma 1
tmp(99) := x"5" & '0' & x"05"; -- STA @5      #salva count milhares
tmp(100) := x"5" & '1' & x"23"; -- STA @291      #mostra count milhares
tmp(101) := x"4" & '0' & x"0A"; -- LDI $10      
tmp(102) := x"8" & '0' & x"05"; -- CEQ @5      #compara milhar com 10
tmp(103) := x"7" & '0' & x"69"; -- JEQ @105      #se for 10, pula para :rstm
tmp(104) := x"A" & '0' & x"00"; -- RET       #retorna
tmp(105) := x"4" & '0' & x"00"; -- LDI $0      
tmp(106) := x"5" & '0' & x"05"; -- STA @5      #zera count milhares
tmp(107) := x"5" & '1' & x"23"; -- STA @291      #zera count milhares
tmp(108) := x"1" & '0' & x"06"; -- LDA @6      #le count dezenas de milhares
tmp(109) := x"2" & '0' & x"01"; -- SOMA @1      #soma 1
tmp(110) := x"5" & '0' & x"06"; -- STA @6      #salva count dezenas de milhares
tmp(111) := x"5" & '1' & x"24"; -- STA @292      #mostra count dezenas de milhares
tmp(112) := x"4" & '0' & x"0A"; -- LDI $10      
tmp(113) := x"8" & '0' & x"06"; -- CEQ @6      #compara dezena de milhar com 10
tmp(114) := x"7" & '0' & x"74"; -- JEQ @116      #se for 10, pula para :rstdm
tmp(115) := x"A" & '0' & x"00"; -- RET       #retorna
tmp(116) := x"4" & '0' & x"00"; -- LDI $0      
tmp(117) := x"5" & '0' & x"06"; -- STA @6      #zera count dezenas de milhares
tmp(118) := x"5" & '1' & x"24"; -- STA @292      #zera count dezenas de milhares
tmp(119) := x"1" & '0' & x"07"; -- LDA @7      #le count centenas de milhares
tmp(120) := x"2" & '0' & x"01"; -- SOMA @1      #soma 1STA !LED70
tmp(121) := x"4" & '0' & x"00"; -- LDI $0      
tmp(122) := x"5" & '0' & x"07"; -- STA @7      #zera count centenas de milhares
tmp(123) := x"5" & '1' & x"25"; -- STA @293      #zera count centenas de milhares
tmp(124) := x"A" & '0' & x"00"; -- RET       
tmp(125) := x"5" & '1' & x"FE"; -- STA @510      #limpa key 1
tmp(126) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(127) := x"5" & '1' & x"20"; -- STA @288      #F Hex0
tmp(128) := x"5" & '1' & x"21"; -- STA @289      
tmp(129) := x"5" & '1' & x"22"; -- STA @290      
tmp(130) := x"5" & '1' & x"23"; -- STA @291      
tmp(131) := x"5" & '1' & x"24"; -- STA @292      
tmp(132) := x"5" & '1' & x"25"; -- STA @293      #F Hex5
tmp(133) := x"4" & '0' & x"01"; -- LDI $1      
tmp(134) := x"5" & '1' & x"00"; -- STA @256      #LED mostra que configura_limite 1
tmp(135) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(136) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(137) := x"5" & '1' & x"23"; -- STA @291      #mostra Switch 70
tmp(138) := x"1" & '1' & x"61"; -- LDA @353      #le key 1
tmp(139) := x"B" & '0' & x"01"; -- AND @1      #mascara para key 1
tmp(140) := x"8" & '0' & x"01"; -- CEQ @1      #ve se key 1 foi pressionado
tmp(141) := x"C" & '0' & x"87"; -- JNE @135      #se nao foi pressionado, volta para :loop_lmt_u
tmp(142) := x"5" & '1' & x"FE"; -- STA @510      #limpa key 1
tmp(143) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(144) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(145) := x"5" & '0' & x"08"; -- STA @8      #salva limite unidades
tmp(146) := x"4" & '0' & x"02"; -- LDI $2      
tmp(147) := x"5" & '1' & x"00"; -- STA @256      #LED mostra que configura_limite 2
tmp(148) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(149) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(150) := x"5" & '1' & x"23"; -- STA @291      #mostra Switch 70
tmp(151) := x"1" & '1' & x"61"; -- LDA @353      #le key 1
tmp(152) := x"B" & '0' & x"01"; -- AND @1      #mascara para key 1
tmp(153) := x"8" & '0' & x"01"; -- CEQ @1      #ve se key 1 foi pressionado
tmp(154) := x"C" & '0' & x"94"; -- JNE @148      #se nao foi pressionado, volta para :loop_lmt_d
tmp(155) := x"5" & '1' & x"FE"; -- STA @510      #limpa key 1
tmp(156) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(157) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(158) := x"5" & '0' & x"09"; -- STA @9      #salva limite dezenas
tmp(159) := x"4" & '0' & x"04"; -- LDI $4      
tmp(160) := x"5" & '1' & x"00"; -- STA @256      #LED mostra que configura_limite 3
tmp(161) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(162) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(163) := x"5" & '1' & x"23"; -- STA @291      #mostra Switch 70
tmp(164) := x"1" & '1' & x"61"; -- LDA @353      #le key 1
tmp(165) := x"B" & '0' & x"01"; -- AND @1      #mascara para key 1
tmp(166) := x"8" & '0' & x"01"; -- CEQ @1      #ve se key 1 foi pressionado
tmp(167) := x"C" & '0' & x"A1"; -- JNE @161      #se nao foi pressionado, volta para :loop_lmt_c
tmp(168) := x"5" & '1' & x"FE"; -- STA @510      #limpa key 1
tmp(169) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(170) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(171) := x"5" & '0' & x"0A"; -- STA @10      #salva limite centenas
tmp(172) := x"4" & '0' & x"08"; -- LDI $8      
tmp(173) := x"5" & '1' & x"00"; -- STA @256      #LED mostra que configura_limite 4
tmp(174) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(175) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(176) := x"5" & '1' & x"23"; -- STA @291      #mostra Switch 70
tmp(177) := x"1" & '1' & x"61"; -- LDA @353      #le key 1
tmp(178) := x"B" & '0' & x"01"; -- AND @1      #mascara para key 1
tmp(179) := x"8" & '0' & x"01"; -- CEQ @1      #ve se key 1 foi pressionado
tmp(180) := x"C" & '0' & x"AE"; -- JNE @174      #se nao foi pressionado, volta para :loop_lmt_m
tmp(181) := x"5" & '1' & x"FE"; -- STA @510      #limpa key 1
tmp(182) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(183) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(184) := x"5" & '0' & x"0B"; -- STA @11      #salva limite milhares
tmp(185) := x"4" & '0' & x"10"; -- LDI $16      
tmp(186) := x"5" & '1' & x"00"; -- STA @256      #LED mostra que configura_limite 5
tmp(187) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(188) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(189) := x"5" & '1' & x"23"; -- STA @291      #mostra Switch 70
tmp(190) := x"1" & '1' & x"61"; -- LDA @353      #le key 1
tmp(191) := x"B" & '0' & x"01"; -- AND @1      #mascara para key 1
tmp(192) := x"8" & '0' & x"01"; -- CEQ @1      #ve se key 1 foi pressionado
tmp(193) := x"C" & '0' & x"BB"; -- JNE @187      #se nao foi pressionado, volta para :loop_lmt_dm
tmp(194) := x"5" & '1' & x"FE"; -- STA @510      #limpa key 1
tmp(195) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(196) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(197) := x"5" & '0' & x"0C"; -- STA @12      #salva limite dezenas de milhares
tmp(198) := x"4" & '0' & x"20"; -- LDI $32      
tmp(199) := x"5" & '1' & x"00"; -- STA @256      #LED mostra que configura_limite 6
tmp(200) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(201) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(202) := x"5" & '1' & x"23"; -- STA @291      #mostra Switch 70
tmp(203) := x"1" & '1' & x"61"; -- LDA @353      #le key 1
tmp(204) := x"B" & '0' & x"01"; -- AND @1      #mascara para key 1
tmp(205) := x"8" & '0' & x"01"; -- CEQ @1      #ve se key 1 foi pressionado
tmp(206) := x"C" & '0' & x"C8"; -- JNE @200      #se nao foi pressionado, volta para :loop_lmt_cm
tmp(207) := x"5" & '1' & x"FE"; -- STA @510      #limpa key 1
tmp(208) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(209) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(210) := x"5" & '0' & x"0D"; -- STA @13      #salva limite centenas de milhares
tmp(211) := x"4" & '0' & x"00"; -- LDI $0      
tmp(212) := x"5" & '1' & x"00"; -- STA @256      #LED mostra que configura_limite 0
tmp(213) := x"1" & '0' & x"02"; -- LDA @2      #comeca voltar valores hex
tmp(214) := x"5" & '1' & x"20"; -- STA @288      
tmp(215) := x"1" & '0' & x"03"; -- LDA @3      
tmp(216) := x"5" & '1' & x"21"; -- STA @289      
tmp(217) := x"1" & '0' & x"04"; -- LDA @4      
tmp(218) := x"5" & '1' & x"22"; -- STA @290      
tmp(219) := x"1" & '0' & x"05"; -- LDA @5      
tmp(220) := x"5" & '1' & x"23"; -- STA @291      
tmp(221) := x"1" & '0' & x"06"; -- LDA @6      
tmp(222) := x"5" & '1' & x"24"; -- STA @292      
tmp(223) := x"1" & '0' & x"07"; -- LDA @7      #termina voltar valores hex
tmp(224) := x"5" & '1' & x"25"; -- STA @293      
tmp(225) := x"A" & '0' & x"00"; -- RET       
tmp(226) := x"1" & '0' & x"02"; -- LDA @2      #le count unidades
tmp(227) := x"8" & '0' & x"08"; -- CEQ @8      #compara com limite unidades
tmp(228) := x"C" & '0' & x"F8"; -- JNE @248      
tmp(229) := x"1" & '0' & x"03"; -- LDA @3      #le count dezenas
tmp(230) := x"8" & '0' & x"09"; -- CEQ @9      #compara com limite dezenas
tmp(231) := x"C" & '0' & x"F8"; -- JNE @248      
tmp(232) := x"1" & '0' & x"04"; -- LDA @4      #le count centenas
tmp(233) := x"8" & '0' & x"0A"; -- CEQ @10      #compara com limite centenas
tmp(234) := x"C" & '0' & x"F8"; -- JNE @248      
tmp(235) := x"1" & '0' & x"05"; -- LDA @5      #le count milhares
tmp(236) := x"8" & '0' & x"0B"; -- CEQ @11      #compara com limite milhares
tmp(237) := x"C" & '0' & x"F8"; -- JNE @248      
tmp(238) := x"1" & '0' & x"06"; -- LDA @6      #le count dezenas de milhares
tmp(239) := x"8" & '0' & x"0C"; -- CEQ @12      #compara com limite dezenas de milhares
tmp(240) := x"C" & '0' & x"F8"; -- JNE @248      
tmp(241) := x"1" & '0' & x"07"; -- LDA @7      #le count centenas de milhares
tmp(242) := x"8" & '0' & x"0D"; -- CEQ @13      #compara com limite centenas de milhares
tmp(243) := x"C" & '0' & x"F8"; -- JNE @248      
tmp(244) := x"4" & '0' & x"01"; -- LDI $1      
tmp(245) := x"5" & '1' & x"01"; -- STA @257      #LED mostra que alcancou limite
tmp(246) := x"5" & '0' & x"0E"; -- STA @14      #seta flag de limite
tmp(247) := x"A" & '0' & x"00"; -- RET       
tmp(248) := x"4" & '0' & x"00"; -- LDI $0      
tmp(249) := x"5" & '1' & x"01"; -- STA @257      #LED mostra que nao alcancou limite
tmp(250) := x"5" & '0' & x"0E"; -- STA @14      #seta flag de limite
tmp(251) := x"A" & '0' & x"00"; -- RET       
tmp(252) := x"5" & '1' & x"FD"; -- STA @509      
tmp(253) := x"1" & '0' & x"10"; -- LDA @16      #le flag de limite 0
tmp(254) := x"8" & '0' & x"01"; -- CEQ $1      #compara com 1
tmp(255) := x"7" & '1' & x"3C"; -- JEQ @316      #se flag de limite 0 for 1, pula para :enddec
tmp(256) := x"1" & '0' & x"02"; -- LDA @2      #le count unidades
tmp(257) := x"8" & '0' & x"00"; -- CEQ $0      #compara com 0
tmp(258) := x"7" & '1' & x"07"; -- JEQ @263      #se for 0, pula para :decd
tmp(259) := x"3" & '0' & x"01"; -- SUB @1      #subtrai 1
tmp(260) := x"5" & '1' & x"20"; -- STA @288      
tmp(261) := x"5" & '0' & x"02"; -- STA @2      #salva count unidades
tmp(262) := x"A" & '0' & x"00"; -- RET       
tmp(263) := x"4" & '0' & x"09"; -- LDI $9      
tmp(264) := x"5" & '0' & x"02"; -- STA @2      
tmp(265) := x"5" & '1' & x"20"; -- STA @288      
tmp(266) := x"1" & '0' & x"03"; -- LDA @3      #le count dezenas
tmp(267) := x"8" & '0' & x"00"; -- CEQ $0      #compara com 0
tmp(268) := x"7" & '1' & x"11"; -- JEQ @273      #se for 0, pula para :decc
tmp(269) := x"3" & '0' & x"01"; -- SUB @1      #subtrai 1
tmp(270) := x"5" & '1' & x"21"; -- STA @289      
tmp(271) := x"5" & '0' & x"03"; -- STA @3      #salva count dezenas
tmp(272) := x"A" & '0' & x"00"; -- RET       
tmp(273) := x"4" & '0' & x"09"; -- LDI $9      
tmp(274) := x"5" & '0' & x"03"; -- STA @3      
tmp(275) := x"5" & '1' & x"21"; -- STA @289      
tmp(276) := x"1" & '0' & x"04"; -- LDA @4      #le count centenas
tmp(277) := x"8" & '0' & x"00"; -- CEQ $0      #compara com 0
tmp(278) := x"7" & '1' & x"1B"; -- JEQ @283      #se for 0, pula para :decm
tmp(279) := x"3" & '0' & x"01"; -- SUB @1      #subtrai 1
tmp(280) := x"5" & '1' & x"22"; -- STA @290      
tmp(281) := x"5" & '0' & x"04"; -- STA @4      #salva count centenas
tmp(282) := x"A" & '0' & x"00"; -- RET       
tmp(283) := x"4" & '0' & x"09"; -- LDI $9      
tmp(284) := x"5" & '0' & x"04"; -- STA @4      
tmp(285) := x"5" & '1' & x"22"; -- STA @290      
tmp(286) := x"1" & '0' & x"05"; -- LDA @5      #le count milhares
tmp(287) := x"8" & '0' & x"00"; -- CEQ $0      #compara com 0
tmp(288) := x"7" & '1' & x"25"; -- JEQ @293      #se for 0, pula para :decdm
tmp(289) := x"3" & '0' & x"01"; -- SUB @1      #subtrai 1
tmp(290) := x"5" & '1' & x"23"; -- STA @291      
tmp(291) := x"5" & '0' & x"05"; -- STA @5      #salva count milhares
tmp(292) := x"A" & '0' & x"00"; -- RET       
tmp(293) := x"4" & '0' & x"09"; -- LDI $9      
tmp(294) := x"5" & '0' & x"05"; -- STA @5      
tmp(295) := x"5" & '1' & x"23"; -- STA @291      
tmp(296) := x"1" & '0' & x"06"; -- LDA @6      #le count dezenas de milhares
tmp(297) := x"8" & '0' & x"00"; -- CEQ $0      #compara com 0
tmp(298) := x"7" & '1' & x"2F"; -- JEQ @303      #se for 0, pula para :deccm
tmp(299) := x"3" & '0' & x"01"; -- SUB @1      #subtrai 1
tmp(300) := x"5" & '1' & x"24"; -- STA @292      
tmp(301) := x"5" & '0' & x"06"; -- STA @6      #salva count dezenas de milhares
tmp(302) := x"A" & '0' & x"00"; -- RET       
tmp(303) := x"4" & '0' & x"09"; -- LDI $9      
tmp(304) := x"5" & '0' & x"06"; -- STA @6      
tmp(305) := x"5" & '1' & x"24"; -- STA @292      
tmp(306) := x"1" & '0' & x"07"; -- LDA @7      #le count centenas de milhares
tmp(307) := x"8" & '0' & x"00"; -- CEQ $0      #compara com 0
tmp(308) := x"7" & '1' & x"39"; -- JEQ @313      #se for 0, pula para :retdec
tmp(309) := x"3" & '0' & x"01"; -- SUB @1      #subtrai 1
tmp(310) := x"5" & '1' & x"25"; -- STA @293      
tmp(311) := x"5" & '0' & x"07"; -- STA @7      #salva count centenas de milhares
tmp(312) := x"A" & '0' & x"00"; -- RET       
tmp(313) := x"4" & '0' & x"09"; -- LDI $9      
tmp(314) := x"5" & '0' & x"07"; -- STA @7      
tmp(315) := x"5" & '1' & x"25"; -- STA @293      
tmp(316) := x"A" & '0' & x"00"; -- RET       
tmp(317) := x"4" & '0' & x"00"; -- LDI $0      
tmp(318) := x"5" & '0' & x"10"; -- STA @16      #zera flag de limite 0
tmp(319) := x"8" & '0' & x"02"; -- CEQ @2      #compara count unidades
tmp(320) := x"C" & '1' & x"61"; -- JNE @353      #se count unidades for diferente , pula para :retvz
tmp(321) := x"8" & '0' & x"03"; -- CEQ @3      #compara count dezenas
tmp(322) := x"C" & '1' & x"61"; -- JNE @353      #se count dezenas for diferente, pula para :retvz
tmp(323) := x"8" & '0' & x"04"; -- CEQ @4      #compara count centenas
tmp(324) := x"C" & '1' & x"61"; -- JNE @353      #se count centenas for diferente, pula para :retvz
tmp(325) := x"8" & '0' & x"05"; -- CEQ @5      #compara count milhares
tmp(326) := x"C" & '1' & x"61"; -- JNE @353      #se count milhares for diferente, pula para :retvz
tmp(327) := x"8" & '0' & x"06"; -- CEQ @6      #compara count dezenas de milhares
tmp(328) := x"C" & '1' & x"61"; -- JNE @353      #se count dezenas de milhares for diferente, pula para :retvz
tmp(329) := x"8" & '0' & x"07"; -- CEQ @7      #compara count centenas de milhares
tmp(330) := x"C" & '1' & x"61"; -- JNE @353      #se count centenas de milhares for diferente, pula para :retvz
tmp(331) := x"4" & '0' & x"01"; -- LDI $1      
tmp(332) := x"5" & '0' & x"10"; -- STA @16      #seta flag de limite 0
tmp(333) := x"A" & '0' & x"00"; -- RET       
tmp(334) := x"4" & '0' & x"00"; -- LDI $0      
tmp(335) := x"5" & '0' & x"0F"; -- STA @15      #zera flag de limite 0
tmp(336) := x"5" & '1' & x"02"; -- STA @258      #zera led 9
tmp(337) := x"4" & '0' & x"09"; -- LDI $9      
tmp(338) := x"8" & '0' & x"02"; -- CEQ @2      #compara count unidades
tmp(339) := x"C" & '1' & x"61"; -- JNE @353      #se count unidades for diferente , pula para :retvz
tmp(340) := x"8" & '0' & x"03"; -- CEQ @3      #compara count dezenas
tmp(341) := x"C" & '1' & x"61"; -- JNE @353      #se count dezenas for diferente, pula para :retvz
tmp(342) := x"8" & '0' & x"04"; -- CEQ @4      #compara count centenas
tmp(343) := x"C" & '1' & x"61"; -- JNE @353      #se count centenas for diferente, pula para :retvz
tmp(344) := x"8" & '0' & x"05"; -- CEQ @5      #compara count milhares
tmp(345) := x"C" & '1' & x"61"; -- JNE @353      #se count milhares for diferente, pula para :retvz
tmp(346) := x"8" & '0' & x"06"; -- CEQ @6      #compara count dezenas de milhares
tmp(347) := x"C" & '1' & x"61"; -- JNE @353      #se count dezenas de milhares for diferente, pula para :retvz
tmp(348) := x"8" & '0' & x"07"; -- CEQ @7      #compara count centenas de milhares
tmp(349) := x"C" & '1' & x"61"; -- JNE @353      #se count centenas de milhares for diferente, pula para :retvz
tmp(350) := x"4" & '0' & x"01"; -- LDI $1      
tmp(351) := x"5" & '0' & x"0F"; -- STA @15      #seta flag de limite 0
tmp(352) := x"5" & '1' & x"02"; -- STA @258      #seta led 9
tmp(353) := x"A" & '0' & x"00"; -- RET       
tmp(354) := x"5" & '1' & x"FC"; -- STA @508      #limpa key 1
tmp(355) := x"1" & '0' & x"02"; -- LDA @2      # le count unidades
tmp(356) := x"5" & '1' & x"20"; -- STA @288      # mostra count unidades
tmp(357) := x"1" & '0' & x"03"; -- LDA @3      # le count dezenas
tmp(358) := x"5" & '1' & x"21"; -- STA @289      # mostra count dezenas
tmp(359) := x"1" & '0' & x"04"; -- LDA @4      # le count centenas
tmp(360) := x"5" & '1' & x"22"; -- STA @290      # mostra count centenas
tmp(361) := x"1" & '0' & x"05"; -- LDA @5      # le count milhares
tmp(362) := x"5" & '1' & x"23"; -- STA @291      # mostra count milhares
tmp(363) := x"1" & '0' & x"06"; -- LDA @6      # le count dezenas de milhares
tmp(364) := x"5" & '1' & x"24"; -- STA @292      # mostra count dezenas de milhares
tmp(365) := x"1" & '0' & x"07"; -- LDA @7      # le count centenas de milhares
tmp(366) := x"5" & '1' & x"25"; -- STA @293      # mostra count centenas de milhares
tmp(367) := x"4" & '0' & x"01"; -- LDI $1      
tmp(368) := x"5" & '1' & x"00"; -- STA @256      #LED mostra que configura_limite 1
tmp(369) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(370) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(371) := x"5" & '1' & x"20"; -- STA @288      #mostra Switch 70
tmp(372) := x"1" & '1' & x"63"; -- LDA @355      #le key 3
tmp(373) := x"B" & '0' & x"01"; -- AND @1      #mascara para key 3
tmp(374) := x"8" & '0' & x"01"; -- CEQ @1      #ve se key 3 foi pressionado
tmp(375) := x"C" & '1' & x"71"; -- JNE @369      #se nao foi pressionado, volta para :loop_cnt_u
tmp(376) := x"5" & '1' & x"FC"; -- STA @508      #limpa key 3
tmp(377) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(378) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(379) := x"5" & '0' & x"02"; -- STA @2      #salva limite unidades
tmp(380) := x"4" & '0' & x"02"; -- LDI $2      
tmp(381) := x"5" & '1' & x"00"; -- STA @256      #LED mostra que configura_limite 2
tmp(382) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(383) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(384) := x"5" & '1' & x"21"; -- STA @289      #mostra Switch 70
tmp(385) := x"1" & '1' & x"63"; -- LDA @355      #le key 3
tmp(386) := x"B" & '0' & x"01"; -- AND @1      #mascara para key 3
tmp(387) := x"8" & '0' & x"01"; -- CEQ @1      #ve se key 3 foi pressionado
tmp(388) := x"C" & '1' & x"7E"; -- JNE @382      #se nao foi pressionado, volta para :loop_cnt_d
tmp(389) := x"5" & '1' & x"FC"; -- STA @508      #limpa key 3
tmp(390) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(391) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(392) := x"5" & '0' & x"03"; -- STA @3      #salva count dezenas
tmp(393) := x"4" & '0' & x"04"; -- LDI $4      
tmp(394) := x"5" & '1' & x"00"; -- STA @256      #LED mostra que configura_limite 3
tmp(395) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(396) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(397) := x"5" & '1' & x"22"; -- STA @290      #mostra Switch 70
tmp(398) := x"1" & '1' & x"63"; -- LDA @355      #le key 3
tmp(399) := x"B" & '0' & x"01"; -- AND @1      #mascara para key 3
tmp(400) := x"8" & '0' & x"01"; -- CEQ @1      #ve se key 3 foi pressionado
tmp(401) := x"C" & '1' & x"8B"; -- JNE @395      #se nao foi pressionado, volta para :loop_cnt_c
tmp(402) := x"5" & '1' & x"FC"; -- STA @508      #limpa key 3
tmp(403) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(404) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(405) := x"5" & '0' & x"04"; -- STA @4      #salva count cenenas
tmp(406) := x"4" & '0' & x"08"; -- LDI $8      
tmp(407) := x"5" & '1' & x"00"; -- STA @256      #LED mostra que configura_limite 4
tmp(408) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(409) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(410) := x"5" & '1' & x"23"; -- STA @291      #mostra Switch 70
tmp(411) := x"1" & '1' & x"63"; -- LDA @355      #le key 3
tmp(412) := x"B" & '0' & x"01"; -- AND @1      #mascara para key 3
tmp(413) := x"8" & '0' & x"01"; -- CEQ @1      #ve se key 3 foi pressionado
tmp(414) := x"C" & '1' & x"98"; -- JNE @408      #se nao foi pressionado, volta para :loop_cnt_m
tmp(415) := x"5" & '1' & x"FC"; -- STA @508      #limpa key 3
tmp(416) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(417) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(418) := x"5" & '0' & x"05"; -- STA @5      #salva limite milhares
tmp(419) := x"4" & '0' & x"10"; -- LDI $16      
tmp(420) := x"5" & '1' & x"00"; -- STA @256      #LED mostra que configura_limite 5
tmp(421) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(422) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(423) := x"5" & '1' & x"24"; -- STA @292      #mostra Switch 70
tmp(424) := x"1" & '1' & x"63"; -- LDA @355      #le key 3
tmp(425) := x"B" & '0' & x"01"; -- AND @1      #mascara para key 3
tmp(426) := x"8" & '0' & x"01"; -- CEQ @1      #ve se key 3 foi pressionado
tmp(427) := x"C" & '1' & x"A5"; -- JNE @421      #se nao foi pressionado, volta para :loop_cnt_dm
tmp(428) := x"5" & '1' & x"FC"; -- STA @508      #limpa key 1
tmp(429) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(430) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(431) := x"5" & '0' & x"06"; -- STA @6      #salva limite dezenas de milhares
tmp(432) := x"4" & '0' & x"20"; -- LDI $32      
tmp(433) := x"5" & '1' & x"00"; -- STA @256      #LED mostra que configura_limite 6
tmp(434) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(435) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(436) := x"5" & '1' & x"25"; -- STA @293      #mostra Switch 70
tmp(437) := x"1" & '1' & x"63"; -- LDA @355      #le key 1
tmp(438) := x"B" & '0' & x"01"; -- AND @1      #mascara para key 1
tmp(439) := x"8" & '0' & x"01"; -- CEQ @1      #ve se key 1 foi pressionado
tmp(440) := x"C" & '1' & x"B2"; -- JNE @434      #se nao foi pressionado, volta para :loop_cnt_cm
tmp(441) := x"5" & '1' & x"FC"; -- STA @508      #limpa key 1
tmp(442) := x"4" & '0' & x"0F"; -- LDI $15      
tmp(443) := x"B" & '1' & x"40"; -- AND @320      #mascara para Switch 70
tmp(444) := x"5" & '0' & x"07"; -- STA @7      #salva limite centenas de milhares
tmp(445) := x"4" & '0' & x"00"; -- LDI $0      
tmp(446) := x"5" & '1' & x"00"; -- STA @256      #LED mostra que configura_limite 0
tmp(447) := x"1" & '0' & x"02"; -- LDA @2      #comeca voltar valores hex
tmp(448) := x"5" & '1' & x"20"; -- STA @288      
tmp(449) := x"1" & '0' & x"03"; -- LDA @3      
tmp(450) := x"5" & '1' & x"21"; -- STA @289      
tmp(451) := x"1" & '0' & x"04"; -- LDA @4      
tmp(452) := x"5" & '1' & x"22"; -- STA @290      
tmp(453) := x"1" & '0' & x"05"; -- LDA @5      
tmp(454) := x"5" & '1' & x"23"; -- STA @291      
tmp(455) := x"1" & '0' & x"06"; -- LDA @6      
tmp(456) := x"5" & '1' & x"24"; -- STA @292      
tmp(457) := x"1" & '0' & x"07"; -- LDA @7      #termina voltar valores hex
tmp(458) := x"5" & '1' & x"25"; -- STA @293      
tmp(459) := x"A" & '0' & x"00"; -- RET       
